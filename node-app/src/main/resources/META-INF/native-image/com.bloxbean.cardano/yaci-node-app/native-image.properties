# Native Image Properties for Yaci Node Application
# These properties are used by GraalVM native-image tool during compilation

Args = -H:+StaticExecutableWithDynamicLibC -march=compatibility \
       --initialize-at-build-time=org.slf4j \
       --initialize-at-build-time=ch.qos.logback \
       --initialize-at-build-time=org.jboss.logging \
       --initialize-at-build-time=com.fasterxml.jackson.databind \
       --initialize-at-build-time=com.bloxbean.cardano.client.plutus.spec.serializers \
       --initialize-at-run-time=io.netty.channel.epoll.Epoll \
       --initialize-at-run-time=io.netty.channel.epoll.Native \
       --initialize-at-run-time=io.netty.channel.epoll.EpollEventLoop \
       --initialize-at-run-time=io.netty.channel.epoll.EpollEventArray \
       --initialize-at-run-time=io.netty.channel.DefaultFileRegion \
       --initialize-at-run-time=io.netty.channel.kqueue.KQueueEventArray \
       --initialize-at-run-time=io.netty.channel.kqueue.KQueueEventLoop \
       --initialize-at-run-time=io.netty.channel.kqueue.Native \
       --initialize-at-run-time=io.netty.channel.unix.Errors \
       --initialize-at-run-time=io.netty.channel.unix.IovArray \
       --initialize-at-run-time=io.netty.channel.unix.Limits \
       --initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger \
       --initialize-at-run-time=io.netty.channel.kqueue.KQueue \
       --initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils \
       --initialize-at-run-time=org.rocksdb \
       --initialize-at-run-time=org.rocksdb.NativeLibraryLoader \
       --enable-http \
       --enable-https \
       --enable-all-security-services \
       -H:+JNI \
       -H:IncludeResources=librocksdbjni-.* \      
       -H:+InstallExitHandlers \
       -H:+PrintClassInitialization \
       -H:EnableURLProtocols=http,https \
       -H:+AllowVMInspection \
       --no-fallback \
       -H:ReflectionConfigurationFiles=reflect-config.json \
       -H:ResourceConfigurationFiles=resource-config.json \
       -H:JNIConfigurationFiles=jni-config.json \
       -H:SerializationConfigurationFiles=serialization-config.json
