plugins {
    id 'application'
}

application {
    mainClass = 'com.bloxbean.cardano.yaci.node.HybridNodeMain'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.bloxbean.cardano.yaci.node.HybridNodeMain'
    }
}

// Create a fat JAR with all dependencies
task fatJar(type: Jar) {
    dependsOn jar, ':core:jar', ':helper:jar'
    archiveClassifier = 'all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'com.bloxbean.cardano.yaci.node.HybridNodeMain'
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    
    // Exclude signature files to avoid conflicts
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

dependencies {
    api project(':core')
    api project(':helper')
    api libs.project.reactor.core

    implementation "org.rocksdb:rocksdbjni:8.9.1"
//    implementation "org.msgpack:jackson-dataformat-msgpack:0.9.6"
    
    // Logging dependencies
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.slf4j:slf4j-reload4j:2.0.7'
    implementation 'ch.qos.reload4j:reload4j:1.2.22'

//    implementation libs.cardano.client.core
    testImplementation libs.project.reactor.test

    implementation "com.bloxbean.cardano:cardano-client-lib:0.6.3"
    implementation "com.bloxbean.cardano:cardano-client-backend-blockfrost:0.6.3"

}

java {
    sourceCompatibility = 21
    targetCompatibility = 21
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'Yaci Node Module'
                description = 'Yaci Node Module'
            }
        }
    }
}
